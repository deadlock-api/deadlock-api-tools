name: Rust Docker Images

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build-and-push:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build the base image with all binaries (without pushing)
      - name: Build Base Image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64
          push: false
          target: binaries-base
          tags: ghcr.io/${{ github.repository }}/rust-base:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push all components
      - name: Build and Push All Components
        run: |
          # List of all components
          COMPONENTS=("salt-scraper" "hltv-scraper" "ingest-worker" "matchdata-downloader" "active-matches-scraper" "builds-fetcher" "history-fetcher" "steam-profile-fetcher" "update-assets-tables")

          for component in "${COMPONENTS[@]}"; do
            echo "Building and pushing $component..."
            docker buildx build \
              --platform linux/arm64 \
              --push \
              --build-arg EXE_NAME=$component \
              --tag ghcr.io/${{ github.repository }}/$component:latest \
              --cache-from type=gha \
              --cache-to type=gha,mode=max \
              .
          done
